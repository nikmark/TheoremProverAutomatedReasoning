/* Generated By:JavaCC: Do not edit this line. TPTPParserConstants.java */
package it.nikmark.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TPTPParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VLINE = 6;
  /** RegularExpression Id. */
  int NOT = 7;
  /** RegularExpression Id. */
  int LOWER_WORD = 8;
  /** RegularExpression Id. */
  int UPPER_WORD = 9;
  /** RegularExpression Id. */
  int SINGLE_QUOTED = 10;
  /** RegularExpression Id. */
  int LOWER_ALFA = 11;
  /** RegularExpression Id. */
  int UPPER_ALFA = 12;
  /** RegularExpression Id. */
  int DOLLAR_LOWER_ALFA = 13;
  /** RegularExpression Id. */
  int DOLLAR_UPPER_ALFA = 14;
  /** RegularExpression Id. */
  int ALFA_NUMERIC = 15;
  /** RegularExpression Id. */
  int DEF_SYS = 16;
  /** RegularExpression Id. */
  int UNDERSCORE = 17;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 18;
  /** RegularExpression Id. */
  int SQ_CHAR = 19;
  /** RegularExpression Id. */
  int INTEGER = 20;
  /** RegularExpression Id. */
  int SIGNED_INTEGER = 21;
  /** RegularExpression Id. */
  int DECIMAL = 22;
  /** RegularExpression Id. */
  int SIGN = 23;
  /** RegularExpression Id. */
  int NUMERIC = 24;
  /** RegularExpression Id. */
  int ZERO_NUMERIC = 25;
  /** RegularExpression Id. */
  int NON_ZERO_NUMERIC = 26;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
          "<EOF>",
          "\" \"",
          "\"\\t\"",
          "\"\\n\"",
          "\"\\r\"",
          "<token of kind 5>",
          "\"|\"",
          "\"~\"",
          "<LOWER_WORD>",
          "<UPPER_WORD>",
          "<SINGLE_QUOTED>",
          "<LOWER_ALFA>",
          "<UPPER_ALFA>",
          "<DOLLAR_LOWER_ALFA>",
          "<DOLLAR_UPPER_ALFA>",
          "<ALFA_NUMERIC>",
          "<DEF_SYS>",
          "\"_\"",
          "\"\\\'\"",
          "<SQ_CHAR>",
          "<INTEGER>",
          "<SIGNED_INTEGER>",
          "<DECIMAL>",
          "<SIGN>",
          "<NUMERIC>",
          "<ZERO_NUMERIC>",
          "<NON_ZERO_NUMERIC>",
          "\"cnf(\"",
          "\",\"",
          "\").\"",
          "\"(\"",
          "\")\"",
  };

}